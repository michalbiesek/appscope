#!/bin/bash


###################### Definitions ######################

FAILED_TEST_LIST=""
FAILED_TEST_COUNT=0

starttest(){
    CURRENT_TEST=$1
    echo "=============================================="
    echo "         Testing $CURRENT_TEST"
    echo "=============================================="
    ERR=0
}

endtest(){
    if [ $ERR -eq "0" ]; then
        RESULT=PASSED
    else
        RESULT=FAILED
        FAILED_TEST_LIST+=$CURRENT_TEST
        FAILED_TEST_LIST+=" "
        FAILED_TEST_COUNT=$(($FAILED_TEST_COUNT + 1))
    fi

    echo "******************* $RESULT *******************"
    echo ""
    echo ""
}

wait_for_files() {
    TIMEOUT=${2:-60}
    while ! compgen -G "${1}" > /dev/null; do
        sleep 1
        ((TIMEOUT=TIMEOUT-1))
        if [ $TIMEOUT -le 0 ]; then
            echo >&2 "warn: timed out waiting for port ${1} files"
            ls -lRa /tmp/out >&2
            return
        fi
    done
    echo 1
}


###################### Tests ######################

# Scope nginx with a variable nginx worker count
# Use custom scope configuration to send only http events to a Unix Domain socket
# Use apache ab to send requests to nginx
# Use fluentbit to relay events to a file
# Assert on number of http events received
fluentbit_unix_file() {
    starttest "Fluentbit_unix->File_$1_Scope_$2_Requests"

    # start fluentbit
    docker build fluentbit/ -t tests-fluentbit > /dev/null
    docker run -d --rm -v test_output:/test_output tests-fluentbit \
        fluent-bit -R /test/parsers.conf \
        -i syslog -p "Mode=unix_tcp" -p "Path=/tmp/abstest" -p "Parser=json" \
        -o file -p "Format=plain" -p "Path=/test_output/" -p "File=fluent.out"
    sleep 3

    # start scoped nginx 
    sed -i "s/worker_processes\ auto/worker_processes\ $1/" nginx/config/nginx.conf
    docker build nginx/ -t tests-nginx > /dev/null
    docker run -d --rm tests-nginx \
        -e SCOPE_HOME=/test/conf_unix.yml \
        ldscope nginx \
    sleep 3

    # start ab
    docker run -d --rm jordi/ab -t tests-ab \
        -c 1 -n $2 http://127.0.0.1:8080/
    sleep 10

    # validate output
    if [ "$(wait_for_files "test_output/fluent.out")" ]; then
        found=$(grep '"source":"http-req"' test_output/fluent.out | wc -l)
        if [ $found -eq $2 ] ; then 
            echo "PASS: No missing http request events"
        else
            echo "FAIL: Missing http request events: expected: $2, got: $found, dropped: $(($2-found))"
            ERR+=1
        fi
        found=$(grep '"source":"http-resp"' test_output/fluent.out | wc -l)
        if [ $found -eq $2 ] ; then 
            echo "PASS: No missing http response events"
        else
            echo "FAIL: Missing http response events: expected: $2, got: $found, dropped: $(($2-found))"
            ERR+=1
        fi
    else
        echo "FAIL: no output files"
        ERR+=1
    fi

    # stop containers
    docker stop tests-nginx
    docker stop tests-ab
    docker stop tests-fluentbit

    # cleanup
    rm -rf test_output/

    endtest
}

# Scope nginx with a variable nginx worker count
# Use custom scope configuration to send only http events to a Unix Domain socket
# Use apache ab to send requests to nginx
# Use fluentbit to relay events to logstream
# Assert on number of http events received
fluentbit_unix_logstream() {
    starttest "Fluentbit_unix->Logstream_$1_Scope_$2_Requests"

    # start logstream
    docker build logstream/ -t tests-logstream > /dev/null
    docker run -d --rm tests-logstream
    sleep 10

    # start fluentbit
    docker build fluentbit/ -t tests-fluentbit > /dev/null
    docker run -d --rm -v test_output:/test_output tests-fluentbit \
        fluent-bit -R /test/parsers.conf \
        -i syslog -p "Mode=unix_tcp" -p "Path=/tmp/abstest" -p "Parser=json" \
        -o logstream -p "Port=10090" -p "auth_token=hello"
    sleep 3

    # start scoped nginx 
    sed -i "s/worker_processes\ auto/worker_processes\ $1/" nginx/config/nginx.conf
    docker build nginx/ -t tests-nginx > /dev/null
    docker run -d --rm tests-nginx \
        -e SCOPE_HOME=/test/conf_unix.yml \
        ldscope nginx \
    sleep 3

    # start ab
    docker run -d --rm jordi/ab -t tests-ab \
        -c 1 -n $2 http://127.0.0.1:8080/
    sleep 10

    # validate output
    if [ "$(wait_for_files "test_output/appscope:in_appscope/CriblOut-*.json")" ]; then
        found=$(grep '"source":"http-req"' test_output/appscope:in_appscope/CriblOut-*.json | wc -l)
        if [ $found -eq $2 ] ; then 
            echo "PASS: No missing http request events"
        else
            echo "FAIL: Missing http request events: expected: $2, got: $found, dropped: $(($2-found))"
            ERR+=1
        fi
        found=$(grep '"source":"http-resp"' test_output/appscope:in_appscope/CriblOut-*.json | wc -l)
        if [ $found -eq $2 ] ; then 
            echo "PASS: No missing http response events"
        else
            echo "FAIL: Missing http response events: expected: $2, got: $found, dropped: $(($2-found))"
            ERR+=1
        fi
    else
        echo "FAIL: no output files"
        ERR+=1
    fi

    # stop containers
    docker stop tests-nginx
    docker stop tests-ab
    docker stop tests-fluentbit
    docker stop tests-logstream

    # cleanup
    rm -rf test_output/

    endtest
}

fluentbit_unix_file 1 100
# fluentbit_unix_file 1 1000
# fluentbit_unix_file 1 10000
# fluentbit_unix_file 10 100
# fluentbit_unix_file 10 1000
# fluentbit_unix_file 10 10000
# fluentbit_unix_logstream 1 100
# fluentbit_unix_logstream 1 1000
# fluentbit_unix_logstream 1 10000
# fluentbit_unix_logstream 10 100
# fluentbit_unix_logstream 10 1000
# fluentbit_unix_logstream 10 10000


###################### Summary ######################

# Results
echo ""
if (( $FAILED_TEST_COUNT == 0 )); then
    echo "************ ALL FLUENTBIT TESTS PASSED ************"
else
    echo "************ $FAILED_TEST_COUNT FLUENTBIT TESTS FAILED ************"
    echo "Failed tests: $FAILED_TEST_LIST"
fi
echo ""

exit ${FAILED_TEST_COUNT}

